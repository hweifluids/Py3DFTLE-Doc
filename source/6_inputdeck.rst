.. _inputdeck:

Input Deck for Solver Parameters
================================

Input and Range Control
---------------------------------

+-------------------+------------------------------------------------------+-------------------------+---------------------------------------------------------------------------------------------------------+
| Key               | Description                                          | Value(s)                | Explaination                                                                                            |
+===================+======================================================+=========================+=========================================================================================================+
| ``vtk_folder``    | Path to folder containing VTK input data             | ``<string>``            |                                                                                                         |
+-------------------+------------------------------------------------------+-------------------------+---------------------------------------------------------------------------------------------------------+
| ``output_dir``    | Path to directory for saving results                 | ``<string>``            |                                                                                                         |
+-------------------+------------------------------------------------------+-------------------------+---------------------------------------------------------------------------------------------------------+
| ``auto_wall``     | Flag for automatic wall detection                    | ``0``                   | Manually indicate computation bounds.                                                                   |
+-------------------+------------------------------------------------------+-------------------------+---------------------------------------------------------------------------------------------------------+
|                   |                                                      | (``1``)                 | Auto detect bounds from input mesh.                                                                     |
+-------------------+------------------------------------------------------+-------------------------+---------------------------------------------------------------------------------------------------------+
| ``wall_xrange``   | X-direction wall bounds [xmin, xmax]                 | ``[<float>, <float>]``  | Dimensionalized coordinates bounds.                                                                     |
+-------------------+------------------------------------------------------+-------------------------+---------------------------------------------------------------------------------------------------------+
| ``wall_yrange``   | Y-direction wall bounds [ymin, ymax]                 | ``[<float>, <float>]``  |                                                                                                         |
+-------------------+------------------------------------------------------+-------------------------+---------------------------------------------------------------------------------------------------------+
| ``wall_zrange``   | Z-direction wall bounds [zmin, zmax]                 | ``[<float>, <float>]``  |                                                                                                         |
+-------------------+------------------------------------------------------+-------------------------+---------------------------------------------------------------------------------------------------------+
| ``x``             | Number of Lagrangian seed points in X direction      | ``<int>``               |                                                                                                         |
+-------------------+------------------------------------------------------+-------------------------+---------------------------------------------------------------------------------------------------------+
| ``y``             | Number of Lagrangian seed points in Y direction      | ``<int>``               |                                                                                                         |
+-------------------+------------------------------------------------------+-------------------------+---------------------------------------------------------------------------------------------------------+
| ``z``             | Number of Lagrangian seed points in Z direction      | ``<int>``               |                                                                                                         |
+-------------------+------------------------------------------------------+-------------------------+---------------------------------------------------------------------------------------------------------+
| ``T_range``       | Time range [``T_start``, ``T_end``] in frames        | ``[<float>, <float>]``  | ``T_end`` no larger than ``N_frames``.                                                                  |
+-------------------+------------------------------------------------------+-------------------------+---------------------------------------------------------------------------------------------------------+
| ``dt``            | Time step for particle advection in frames           | ``<float>``             |                                                                                                         |
+-------------------+------------------------------------------------------+-------------------------+---------------------------------------------------------------------------------------------------------+
| ``physical_dt``   | Physical time step between two input frames          | ``<float>``             |                                                                                                         |
+-------------------+------------------------------------------------------+-------------------------+---------------------------------------------------------------------------------------------------------+

Numerical Methods
---------------------------------


+-------------------+------------------------------------------------------+-------------------------+---------------------------------------------------------------------------------------------------------+
| Key               | Description                                          | Value(s)                | Explaination                                                                                            |
+===================+======================================================+=========================+=========================================================================================================+
| ``if_backward``   | Backward integration flag                            | ``0``                   | Only compute forward advection (repelling LCS structures).                                              |
+-------------------+------------------------------------------------------+-------------------------+---------------------------------------------------------------------------------------------------------+
|                   |                                                      | (``1``)                 | Compute in both side (both repelling and attracting structures).                                        |
+-------------------+------------------------------------------------------+-------------------------+---------------------------------------------------------------------------------------------------------+
| ``wall_treatment``| Wall-treatment strategy                              | (``clamp``)             |                                                                                                         |
+-------------------+------------------------------------------------------+-------------------------+---------------------------------------------------------------------------------------------------------+
|                   |                                                      | ``dirichlet``           |                                                                                                         |
+-------------------+------------------------------------------------------+-------------------------+---------------------------------------------------------------------------------------------------------+
|                   |                                                      | ``reflect``             |                                                                                                         |
+-------------------+------------------------------------------------------+-------------------------+---------------------------------------------------------------------------------------------------------+
|                   |                                                      | ``periodic``            |                                                                                                         |
+-------------------+------------------------------------------------------+-------------------------+---------------------------------------------------------------------------------------------------------+
| ``advc_method``   | Lagrangian advection scheme                          | (``Euler``)             | Simple and fast Euler stepping with :math:`O(h^1)` error.                                               |
+-------------------+------------------------------------------------------+-------------------------+---------------------------------------------------------------------------------------------------------+
|                   |                                                      | ``RK2``                 | Rungeâ€“Kutta 2 with :math:`O(h^2)` error.                                                                |
+-------------------+------------------------------------------------------+-------------------------+---------------------------------------------------------------------------------------------------------+
|                   |                                                      | ``RK4``                 | Rungeâ€“Kutta 4 with :math:`O(h^4)` error.                                                                |
+-------------------+------------------------------------------------------+-------------------------+---------------------------------------------------------------------------------------------------------+
|                   |                                                      | ``RK6``                 | Rungeâ€“Kutta 6 with :math:`O(h^6)` error.                                                                |
+-------------------+------------------------------------------------------+-------------------------+---------------------------------------------------------------------------------------------------------+
| ``interp_method`` | Interpolation method for velocity fields             | ``trilinear``           | Simple and fast triliear interpolation method. Very fast on GPUs.                                       |
+-------------------+------------------------------------------------------+-------------------------+---------------------------------------------------------------------------------------------------------+
|                   |                                                      | (``tricubic``)          |                                                                                                         |
+-------------------+------------------------------------------------------+-------------------------+---------------------------------------------------------------------------------------------------------+
|                   |                                                      | ``hermite``             |                                                                                                         |
+-------------------+------------------------------------------------------+-------------------------+---------------------------------------------------------------------------------------------------------+
|                   |                                                      | ``WENO``                | Weighted Essentially Non-Oscillatory (WENO) scheme with shockwave capture capability.                   |
+-------------------+------------------------------------------------------+-------------------------+---------------------------------------------------------------------------------------------------------+
| ``grad_order``    | The method (order) of gradient discretization        | (``2``)                 | 2nd-order central difference.                                                                           |
+-------------------+------------------------------------------------------+-------------------------+---------------------------------------------------------------------------------------------------------+
|                   |                                                      | ``4``                   | ``I.P.`` 4th-order central difference.                                                                  |
+-------------------+------------------------------------------------------+-------------------------+---------------------------------------------------------------------------------------------------------+
|                   |                                                      | ``6``                   | ``I.P.`` 6th-order central difference.                                                                  |
+-------------------+------------------------------------------------------+-------------------------+---------------------------------------------------------------------------------------------------------+
|                   |                                                      | ``100``                 | ``I.P.`` Global Fast Fourier Transform (FFT) with finite order. Compute extremely intensive!            |
+-------------------+------------------------------------------------------+-------------------------+---------------------------------------------------------------------------------------------------------+
| ``Eigen_method``  | Solver for max eigenvalue of Cauchyâ€“Green tensor     | ``eigmax_sym3``         | Closed-form cubic eigenvalue solver for symmetric 3Ã—3 matrices (noniterative solver).                   |
+-------------------+------------------------------------------------------+-------------------------+---------------------------------------------------------------------------------------------------------+
|                   |                                                      | ``jacobi``              | ``I.P.`` Jacobi eigenvalue algorithm (iterative).                                                       |
+-------------------+------------------------------------------------------+-------------------------+---------------------------------------------------------------------------------------------------------+

As for your reference, and configured as defaults, the *Berkeley LCS Tutorials* used ``RK4`` for advection, interpolated by ``tricubic``. Although non detailed, ``grad_order=2`` was employed by them from the equation, supposing the mesh is sufficiently refined.
Please always notice that, although providing much better numerical precision and looks cool in papers, high-order methods could be resource-consuming, even hundreds of times.

Dynamic LCS Window
---------------------------------

+-------------------+------------------------------------------------------+-------------------------+---------------------------------------------------------------------------------------------------------+
| Key               | Description                                          | Value(s)                | Explaination                                                                                            |
+===================+======================================================+=========================+=========================================================================================================+
| ``dyn_mode``      | Dynamic LCS mode selector                            | (``0``)                 | Treat this input as a steady whole, generating still results. See :ref:`steady`.                        |
+-------------------+------------------------------------------------------+-------------------------+---------------------------------------------------------------------------------------------------------+
|                   |                                                      | ``1``                   | Dynamic LCS computation based on sliding window. See :ref:`unsteady`.                                   |
+-------------------+------------------------------------------------------+-------------------------+---------------------------------------------------------------------------------------------------------+
| ``win_size``      | Window size for dynamic LCS                          | ``<float>``             | The window size in frames for each batch of computation. Available under ``dyn_mode=1``.                |
+-------------------+------------------------------------------------------+-------------------------+---------------------------------------------------------------------------------------------------------+
| ``win_step``      | Window step for dynamic LCS                          | ``<float>``             | Stepping in frames. Better smaller than ``win_size/2`` for capturing dynamic patterns.                  |
+-------------------+------------------------------------------------------+-------------------------+---------------------------------------------------------------------------------------------------------+

Utilizations
-------------------

+-------------------+------------------------------------------------------+-------------------------+---------------------------------------------------------------------------------------------------------+
| Key               | Description                                          | Value(s)                | Explaination                                                                                            |
+===================+======================================================+=========================+=========================================================================================================+
| ``if_visual``     | Glace visualization enabler                          | ``0`` / ``1``           | Take a pop-up glance on FTLE coutours after computation for check with a rudimentary appearance.        |
+-------------------+------------------------------------------------------+-------------------------+---------------------------------------------------------------------------------------------------------+

.. _flow_vars:

Flow So